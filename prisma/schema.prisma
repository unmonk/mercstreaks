// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  //url      = env("DATABASE_URL") // localdb
  url               = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl         = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
  shadowDatabaseUrl = env("POSTGRES_URL_NON_POOLING") // used for migrations
}

model Event {
  id          String   @id @default(cuid())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  leftOption  String
  rightOption String
  leftImage   String?
  rightImage  String?
  description String
  league      League   @default(OTHER)
  startTime   DateTime
  endTime     DateTime
  network     String   @default("N/A")
  gameId      String   @default(cuid())
  picks       Pick[]

  @@unique([description, gameId])
  @@index([startTime(sort: Asc)])
}

model Pick {
  id        String   @id @default(cuid())
  userId    String
  eventId   String
  event     Event    @relation(fields: [eventId], references: [id])
  option    PickType @default(NONE)
  status    Status   @default(PENDING)
  updatedAt DateTime @updatedAt
  createdAt DateTime @default(now())
  isActive  Boolean  @default(false)

  @@unique([userId, eventId])
  @@index([userId])
  @@index([eventId])
}

model Streak {
  id         String     @id
  userId     String
  started    DateTime   @default(now())
  ended      DateTime
  updated    DateTime   @updatedAt
  count      Int        @default(0)
  type       StreakType
  campaignId String
  Campaign   Campaign   @relation(fields: [campaignId], references: [id])

  @@index([userId])
  @@index([campaignId])
}

model Campaign {
  id             String   @id @default(cuid())
  name           String
  description    String
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  streakWinCount Int      @default(1)
  start          DateTime @default(now())
  end            DateTime
  streaks        Streak[]
}

enum StreakType {
  WIN
  LOSS
}

enum Status {
  WIN
  LOSS
  PENDING
  CANCELLED
  DRAW
  ACTIVE
}

enum PickType {
  LEFT
  RIGHT
  NONE
}

enum League {
  NBA
  CFB
  MBB
  WBB
  WNBA
  NCAA
  MLB
  NFL
  NHL
  OTHER
}
